#!/bin/bash
set -euo pipefail

abort() {
  echo "${BASH_SOURCE[0]##*/}: $*" >&2
  exit 1
}

if [[ $# -ne 1 ]]; then
  abort "specify target file"
fi

target="$1"

if [[ ! -e "$target" ]]; then
  abort "$target does not exist"
fi

if [[ ! -f "$target" ]]; then
  abort "$target is not a file"
fi

if [[ "$(file --brief --mime-type -- "$target" || :)" == text/* ]]; then
  abort "$target is a text file"
fi

target_abspath="$(realpath -- "$target")"
name="$(basename -- "$target")"
while :; do
  dir="$(dirname -- "$target_abspath")/$name.$RANDOM"
  [[ -e "$dir" ]] || break
done
mkdir -- "$dir"
mv -- "$target_abspath" "$dir/$name"

trap '
if [[ -e "$dir/$name" ]]; then
  mv -- "$dir/$name" "$target_abspath"
fi
rm -rf "$dir"
' EXIT

suffix=""
pushd "$dir" &>/dev/null
case "$name" in
  *.tar.gz) tar xvf "$name"  ; suffix=".tar.gz" ;;
  *.tgz) tar xvf "$name"     ; suffix=".tgz"    ;;
  *.tar.bz2) tar xjvf "$name"; suffix=".tar.bz2";;
  *.tbz) tar xjvf "$name"    ; suffix=".tbz"    ;;
  *.tar.xz) tar xJvf "$name" ; suffix=".tar.xz" ;;
  *.tar.Z) tar xvf "$name"   ; suffix=".tar.Z"  ;;
  *.tar) tar xvf "$name"     ; suffix=".tar"    ;;
  *.tar.br) brotli -cd "$name" | tar xv; suffix=".tar.br"  ;;
  *.tbr)    brotli -cd "$name" | tar xv; suffix=".tbr"     ;;
  *.tar.zst)  zstd -cd "$name" | tar xv; suffix=".tar.zst" ;;
  *.zip)
    if command -v ditto >/dev/null; then
      ditto -V -x -k --sequesterRsrc -- "$name" .
    else
      unzip "./$name"
    fi                       ; suffix=".zip"    ;;
  *.lzh) lha e -- "$name"    ; suffix=".lzh"    ;;
  *.gz) gzip -d -- "$name"   ; suffix=".gz"     ;;
  *.bz2) bzip2 -d -- "$name" ; suffix=".bz2"    ;;
  *.Z) uncompress -- "$name" ; suffix=".Z"      ;;
  *.arj) unarj "./$name"     ; suffix=".arj"    ;;
  *) abort "$target is not an archive file"     ;;
esac
if [[ -e "$dir/$name" ]]; then
  mv -- "$dir/$name" "$target_abspath"
fi
popd &>/dev/null

shopt -s nullglob dotglob
files=("$dir"/*)
if [[ "${#files[@]}" -eq 1 && "${files[0]##*/}" == "${name%"$suffix"}" ]]; then
  path="${files[0]}"
  new_path="$(basename -- "$path")"
  i=0
  prefix="$new_path"
  while [[ -e "$new_path" ]]; do
    new_path="${prefix}_$((++i))"
  done
  mv -- "$path" "$new_path"
elif [[ "${#files[@]}" -eq 0 ]]; then
  new_path="$name"
else
  new_path="$(basename -- "$target_abspath" "$suffix")"
  i=0
  prefix="$new_path"
  while [[ -e "$new_path" ]]; do
    new_path="${prefix}_$((++i))"
  done
  mkdir -- "$new_path"
  if [[ "${#files[@]}" -gt 0 ]]; then
    mv -- "${files[@]}" "$new_path"
  fi
fi
echo "output: $new_path" >&2
